/********************************************************************************************
 *     LEGAL DISCLAIMER
 *
 *     (Header of MediaTek Software/Firmware Release or Documentation)
 *
 *     BY OPENING OR USING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 *     THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE") RECEIVED
 *     FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON AN "AS-IS" BASIS
 *     ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES, EXPRESS OR IMPLIED,
 *     INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
 *     A PARTICULAR PURPOSE OR NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY
 *     WHATSOEVER WITH RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 *     INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK
 *     ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
 *     NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S SPECIFICATION
 *     OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
 *
 *     BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE LIABILITY WITH
 *     RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION,
 *     TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE
 *     FEES OR SERVICE CHARGE PAID BY BUYER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 *     THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE WITH THE LAWS
 *     OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF LAWS PRINCIPLES.
 ************************************************************************************************/

#ifndef __DRV_IF_UDVT_H
#define __DRV_IF_UDVT_H


#define FATS_WAITRESPONSE_ERR        0x00
#define FATS_WAITRESPONSE_YES        0x01
#define FATS_WAITRESPONSE_NO         0x02
#define FATS_WAITRESPONSE_TIMEOUT    0x03


typedef enum
{
	UDVT_TEST_PASS = 0,
	UDVT_TEST_FAIL,
}UDVT_TEST_RESULT_e;

extern void UDVT_IF_TestProgress(UINT32 u4Percent);
extern void UDVT_IF_SendResult(UDVT_TEST_RESULT_e TestResult);
extern UINT32 UDVT_IF_OpenFile(const char *filename,const char *mode);
extern UINT32 UDVT_IF_ReadFile(void *ptr,UINT32 size,UINT32 count,UINT32 stream);
extern UINT32 UDVT_IF_GetFileLength(UINT32 stream);
extern UINT32 UDVT_IF_CloseFile(UINT32 stream);
extern UINT32 UDVT_IF_SeekFile(UINT32 stream,INT32 offset,UINT32 origin);
extern UINT32 UDVT_IF_DebugCheckSum(void *ptr,UINT32 count);
extern UINT32 FATS_IF_WaitResponse(const char *pMsgStr,UINT32 timeout);
extern UINT32 UDVT_IF_WriteFile(void *ptr,UINT32 size,UINT32 count,UINT32 stream);
extern UINT32 FATS_IF_SaveLog(UINT32 logLvl,const char *pformat,...);

#endif // __DRV_IF_FTR_H
